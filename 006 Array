You have been given two arrays/list ‘ARR1’ and ‘ARR2’ consisting of ‘N’ and ‘M’ integers 
respectively. Your task is to return the number of elements common to ‘ARR1’ and ‘ARR2’ and 
the number of elements in the union of ‘ARR1’ and ‘ARR2’.

#include <bits/stdc++.h> 
pair < int , int > findSimilarity(vector < int > arr1, vector < int > arr2, int n, int m) 
{
    sort(arr1.begin(), arr1.end());
    sort(arr2.begin(), arr2.end());
    
    int i = 0;
    int j = 0;
    int common = 0;

    while(i < n && j < m){
        if (arr1[i] < arr2[j]) i++;
        else if(arr1[i] > arr2[j]) j++;
        else {
            common++;
            i++;
            j++;
        }
    }
    
    int unionSize = n + m - common;
    
    return {common, unionSize};
}
